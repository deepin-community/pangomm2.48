2022-09-21  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  2.50.1

2022-09-12  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Convert README to README.md

2022-05-24  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson/MSVC: Re-organize warning-related compiler flags

  Add a short description for each of the warning-related compiler flags that we
  apply globally.
  
  Also, apply '/wd4267' only when we are building a 64-bit build, as that warning
  should only be related to 64-bit builds.

2022-05-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  meson.build: Avoid configuration warnings

2022-03-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Use artifacts to transfer data between stages, part 2

2022-03-16  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Build documentation of dependencies

  Build documentation of libsigc++, glibmm, cairomm, or else pangomm's
  inheritance diagrams will be incomplete due to missing tag files.

2022-03-16  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Use artifacts to transfer data between stages

2022-02-27  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Don't build everything with warnings=fatal

  Build only pangomm with warnings=fatal.
  Select latest released version of libsigc++3.

2022-02-27  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  meson.build: Check if Perl is required for building documentation

  New versions of mm-common use the Python scripts doc_postprocess.py
  and doc_install.py instead of the Perl scripts doc-postprocess.pl and
  doc-install.pl when documentation is built.

2022-02-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Context::get_font_map(): Fix reference count

  pango_context_get_font_map() returns "(transfer none)".
  See https://mail.gnome.org/archives/gtkmm-list/2022-February/msg00031.html

2022-02-15  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  meson.build: Specify 'check' option in run_command()

  The default value will be changed in future Meson releases.
  
  Don't use deprecated python3.path().
  Let import('python').find_installation() always find the python
  installation used to run Meson.

2022-01-04  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Reinsert 'meson test'

  now with (hopefully) correct YAML syntax.

2022-01-04  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Skip 'meson test'

2022-01-04  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Don't build documentation of dependencies

2021-12-06  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  2.50.0

2021-12-06  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Comment out 'meson test'

  If the package manager does not find a new enough version of pango,
  pango is built as a subproject, and 'meson test' tests both pango and
  pangomm. If a pango test fails, the whole CI fails.
  There are no tests in pangomm, anyway.

2021-12-06  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Attribute: Add some create_attr_*() methods

  and add TextTransform, BaselineShift and FontScale enums.

2021-12-06  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  AttrList: Add to_string() and from_string()

  and require pango >= 1.49.4.

2021-12-06  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Regenerate docs.xml and .defs files, using files from pango 1.50.0

  and update pango_docs_override.xml.

2021-11-10  Chun-wei Fan  <fanchunwei@src.gnome.org>

  build: Support Visual Studio 2022 builds

  Make these builds distinct from the Visual Studio 2019 builds.

2021-10-11  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Add FontMap::get_family()

2021-10-11  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Add the CairoFontMapImpl class

  * pango/pangomm/.gitignore:
  * pango/pangomm/filelist.am:
  * pango/pangomm/meson.build: Add cairofontmapimpl.
  * pango/src/cairofontmap.hg: Improve the documentation of get_default().
  * pango/src/fontmap.[ccg|hg]: Add a custom wrap_new(). Wrap in a
  CairoFontMapImpl if the PangoFontMap object implements PangoCairoFontMap.
  * pango/pangomm/cairofontmapimpl.[cc|h]: New files. A CairoFontMapImpl
  derives from FontMap and implements CairoFontMap.
  
  Fixes #15

2021-09-12  Pavlo Solntsev  <p.sun.fun@gmail.com>

  CI: Switching to debian:testing

2021-09-06  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  AttrList: Add get_attributes(), update(), equal()

  Fixes #12

2021-09-06  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  docs/reference/Doxyfile.in: Remove obsolete entry

2021-08-25  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  CI: Add .gitlab-ci.yml

2021-08-25  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Don't include individual pango headers, part 2

2021-08-24  Matthias Clasen  <mclasen@redhat.com>

  Don't include individual pango headers

  As in every gnome library, you are only supposed
  to include the main pango.h header from the outside.
  
  This was causing build failures after some recent
  pango header rearrangements.

2021-07-16  Matthias Clasen  <mclasen@redhat.com>

  Use pango from the main branch

  Change the Pango subproject to use the main branch.
  
  This depends on
  https://gitlab.gnome.org/GNOME/pango/-/merge_requests/379

2021-05-21  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  2.49.1

2021-05-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Add dependencies to Doxygen tag files in subprojects

  Doxygen in a main project shall not be called before tag files have been
  created or updated in subprojects.

2021-05-14  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Fix build as subproject without building documentation

  * meson.build: If mm-common-get is not found in maintainer-mode
  with 'required: false', try with 'required: true'.
  Don't try to use tag_file, if documentation is not built.
  * docs/reference/meson.build: Don't use variables from modules
  that don't define doxytagfile. These are subprojects that don't build
  their documentation.

2021-05-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Visual Studio builds: Clean up build files

  glibmm will be updated to be clear of classes that export items making the
  built binaries dependent on the exact compiler version and the STL version,
  which will eliminate the need to ignore warnings C4251, C4273 and C4275.
  
  We will also use the /EHsc compiler flag so that we can also drop the
  ignore on warning C4530.

2021-05-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Subprojects can use meson.add_dist_script() if meson.version() >= 0.58.0

  Call add_dist_script() in a subproject, if meson.version() >= 0.58.0.

2021-04-08  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: No implicit_include_directories

2021-03-26  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: No implicit_include_directories

  It shall not be possible to find a pangomm header file
  with #include <xxx.h> instead of #include <pangomm/xxx.h>.
  Not fully fixed until https://github.com/mesonbuild/meson/issues/8562
  has been fixed.

2021-03-16  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: Make it possible to use pangomm as a subproject

  pango, cairomm and glibmm can be subprojects of pangomm.

2021-03-09  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pangommconfig.h.*: Don't dllimport on MinGW

  This will fix warnings when building items using pangomm with MinGW/GCC.
  
  Please see: https://gitlab.gnome.org/GNOME/gtkmm/-/issues/90

2021-02-25  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: Use relative paths to untracked/

  The paths to the source code in untracked/ shall be relative to the
  meson.build file, when library files are built from a tarball.
  With absolute paths Meson may generate too long file names.
  See merge request gtkmm!61

2021-01-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  GlyphItem: Make most methods public

  They became private by mistake 12 years ago in
  commit d5781fecebf7eeb5bafbfb875027f6f1707a2bf1.
  
  Fixes #11

2021-01-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Layout, LayoutIter: Add get_const_line() and get_const_lines()

  * pango/src/layout.hg: Add get_const_line() and get_const_lines().
  * pango/src/layoutiter.hg: Add get_const_line().
  
  Fixes #10

2021-01-17  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Layout: Speed up get_log_attrs()

  Call pango_layout_get_log_attrs_readonly() instead of
  pango_layout_get_log_attrs(). The PangoLogAttr structs
  will then be copied once instead of twice.

2021-01-16  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  GlyphItem: Fix a memory leak in split()

2021-01-16  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  docs/reference/Doxyfile.in: Remove obsolete entries

2020-12-19  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  2.48.0

2020-12-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Regenerate docs.xml and .defs files

2020-12-11  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Change ABI to pangomm-2.48; Use glibmm-2.68 instead of glibmm-2.66

  So we can use the 2.44-2.46 version numbers for stable releases in
  the pangomm-1.4 ABI series.
  
  We've done similar ABI name changes before.

2020-11-27  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Add Layout::set/get_line_spacing()

  See #9

2020-11-27  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  configure.ac, meson.build: Require pangocairo >= 1.45.1

  Overline support, such as pango_attr_overline_new(), was added in
  pango 1.45.1. The requirement should have been bumped when those
  functions were wrapped.

2020-11-16  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Wrap pango_shape_with_flags()

  * configure.ac:
  * meson.build: Require pangocairo >= 1.44.3
  * pango/src/glyphstring.[ccg|hg]: Add constructor
  GlyphString(const Glib::ustring& item_text,
  const Glib::ustring& paragraph_text, const Analysis& analysis,
  ShapeFlags flags = ShapeFlags::NONE).
  * pango/src/item.[ccg|hg]: Add enum ShapeFlags and
  shape(const Glib::ustring& item_text, const Glib::ustring& paragraph_text,
  ShapeFlags flags = ShapeFlags::NONE).
  * tools/m4/convert_pango.m4: Add conversions for ShapeFlags.
  
  See #9

2020-10-07  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Bump version to 2.43.3

  Even micro version in released versions, odd micro version in Git.
  See https://wiki.gnome.org/MaintainersCorner/Releasing
  (which says minor version in one sentence where it should
  say micro version)

2020-10-01  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: Fix versioning on macOS

  See libsigcplusplus, pull request 65

2020-07-23  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Use Meson-style DLL and .lib naming if requested

  To make things more consistent and less prone to confusion, if 'USE_MESON_LIBS'
  is specified in the NMake command line, build the DLLs and .lib's that are
  named like the Meson counterparts.  Binaries built with Meson+Visual Studio
  and the ones that are built via NMake using 'USE_MESON_LIBS' are
  interchangeable, provided that they are built with the same Visual Studio
  version.

2020-07-23  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Fix generating pangomm[config.h|.rc]

  The previous additions to generate those files accidentally made the build
  attempt to generate them, even if done from a release tarball that is done by
  the autotools builds.
  
  This will fix this situation, and improve the situation that if pangomm.rc or
  pangommconfig.h needs to be generated, these files will be generated
  automatically

2020-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  LayoutIter: Fix get_run() and get_line()

  get_run() shall call pango_layout_iter_get_run_readonly() and
  take a copy of the returned PangoLayoutRun.
  Make proper const and non-const versions of get_line().

2020-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  LayoutRun: Rename to GlyphItem

  PangoLayoutRun was renamed to PangoGlyphItem in the year 2002.
  For backward compatibility PangoLayoutRun is a typedef of PangoGlyphItem.
  No such backward compatibility is needed in this version of pangomm.

2020-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Renderer: Add vfuncs

  See #9

2020-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Font, FontFace, FontFamily, FontMetrics: Add new methods

2020-07-22  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Link with giomm

  ...since we are now using items from giomm since commit 17021092, and ensure
  that we do indeed refer to the glibmm (giomm) master headers
  as we are using items from

2020-07-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Attribute: Add Overline and ShowFlags enums and some create*() methods

  Fixes #9

2020-07-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Regenerate docs.xml and .defs files

2020-07-19  Andreas Persson  <andreasp56@outlook.com>

  Let FontMap and FontFamily implement ListModel

  Let the FontMap and FontFamily classes implement the Gio::ListModel
  interface, just as the C level pango classes do. For this, a dependency
  to giomm was added. Wrap CairoFontMap::get_default().

2020-07-08  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Fix headers search

  We ought to look in $(PREFIX)\include\harfbuzz and $(PREFIX)\include, as the
  HarfBuzz and Cairo headers can be found in these respective locations.

2020-07-08  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Support ARM64 Windows builds

  This will make the NMake Makefiles capable of building ARM64 binaries of
  pangomm, which can be used on Windows 10 on ARM systems.

2020-06-30  Chun-wei Fan  <fanchunwei@src.gnome.org>

  README.win32: Update Meson build info

  It is now possible to build Pango directly from a GIT checkout on Visual Studio
  builds for a while, so let people know about this.
  
  Also note that glibmm and cairomm should be built with Meson in order to use the
  Meson build files for pangomm, and that it is recommended to use the same compiler
  to build pangomm, glibmm and cairomm.

2020-06-30  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Use the /utf-8 compiler flag

  This makes it easier to build pangomm on non-Western locales, without requiring
  to change the "Locale settings for non-Unicode programs" to English, which will
  require a restart, since warning (error) C4819 can be otherwise triggered, which
  can indicate broken builds due to Unicode handling issues in the compiler.

2020-06-30  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Apply toolset version for Meson-built deps

  As the Meson build files for Visual Studio apply the toolset version in the
  .lib filenames by default, apply the toolset version in the Meson-built -mm
  .lib files that we link in, just as we did when we we link in the -mm .lib
  files that was built with NMake, by default.
  
  The option 'USE_COMPAT_LIBS' will also mean that we will use the former
  behavior when we link in the Meson-built -mm .lib's, just as we did when we
  link in the NMake-built -mm .lib's.
  
  Also fix the case also when the 'USE_COMPAT_LIBS' option is used and when
  'USE_MESON_LIBS' is not used on Visual Studio 2017, where the toolset version
  was not correctly applied.

2020-06-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  docs/reference/: Update for Doxygen >= 1.8.16

  * docs/reference/meson.build: Doxygen 1.8.16 and later does not store
  tag file names in the html files. This requires changes in meson.build
  and in doc-install.pl (in mm-common). Otherwise references to other modules
  won't be updated in the html files when they are installed.
  * docs/reference/Doxyfile.in: Remove PERL_PATH and MSCGEN_PATH.
  Doxygen since version 1.8.0 does not use them.

2020-06-29  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Meson/Visual Studio builds: Include toolset version by default

  This makes the built DLL and .lib's contain the toolset version if the build is
  carried out using Visual Studio 2017 or later, unless the
  'msvc14x-parallel-installable' option is set to be false during configuration.
  
  The reasoning behind this change is that there can be subtle problems when, for
  instance, one tries to link to a Visual Studio 2017-built pangomm when building
  items dependening on pangomm with Visual Studio 2019.  This is unfortunate as
  Microsoft did try hard to make interoperating between binaries built with
  Visual Studio 2017 and 2019 as easy as possible in terms of ABI and API, but
  unfortunately this can hit the corner cases where this compatibility does not
  work.
  
  As the name suggests, this attempts to make Visual Studio 2017 and 2019 builds
  share a single set of underlying C DLLs easier, while avoiding breakages caused
  by such subtle differences.

2020-06-29  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson.build: Check for /utf-8 on Visual Studio

  Enable this compiler flag on Visual Studio if it is supported, so that building
  under non-English (East Asian) locales is made easier, which helps to avoid the
  C4819 error under such situations, due to a Unicode handling issue in the
  compiler when running under such locales

2020-06-29  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Meson: Use pkg-config to find glibmm and cairomm for all builds

  Stop manually looking for glibmm and cairomm for better consistency, as:
  
  -Items that depended on glibmm which added Meson build support after glibmm,
   such as gtkmm and libxml++ also required glibmm to be found via pkg-config
   files, and they still had NMake Makefile support for Visual Studio builds.
   For items that use cairomm directly, this will be the case as well.
  -There could be corner cases on the glibmm and cairomm libraries that pangomm
   links to in  terms of ABI compatibility between Visual Studio 2015, 2017 and
   2019.

2020-06-16  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Use toolset version in DLL/.lib naming

  Instead of using the Visual Studio version ('vc150' for Visual Studio 2017),
  use the toolset version ('vc141' for Visual Studio 2017 and 'vc142' for Visual
  Studio 2019, as defined by Microsoft) so that we are more in-line with what
  is now done in the pangomm-2-42 branch.
  
  If using the old naming convention is desired, an NMake command line option
  'USE_COMPAT_LIBS' have been added-note that this will require glibmm, cairomm,
  and libsigc++ to be built with that option enabled.

2020-05-05  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson: Clean up Visual Studio bits

  Streamline how we look for the dependencies manually, by using the
  'has_headers:' attribute of cpp_compiler.find_library(), so that we can
  check for the presence of the headers at the same time as looking for
  the glibmm, cairomm and/or libsigc++ headers.

2020-05-05  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Meson/Visual Studio: Support cairomm lookup using pkg-config

  cairomm recently received Meson build support, which will generate the
  pkg-config files for us, so try to look for cairomm first using
  pkg-config, before looking for it manually.
  
  Since cairomm's pkg-config file also pulls in libsigc++, we can also
  skip looking for libsigc++ if we found cairomm via pkg-config.

2020-05-05  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Support Meson-built cairomm

  Allow linking directly to Meson-built cairomm when using the
  USE_MESON_LIBS option when running NMake.

2020-04-28  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  pango/meson.build: Minor fix of pangomm-2.44.pc

  libdir=${exec_prefix}/lib, as when it's generated with Autotools.

2020-04-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pango/src/fontdescription.hg: Mark operators with PANGOMM_API

  We are using a _WRAP_EQUAL here which generates operator== and
  operator!= overloads that actually need to be exported.  So, pass in a
  function decorator to _WRAP_EQUAL

2020-04-07  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: If not maintainer-mode, check that generate-binding.py exists

  Trying to build with maintainer-mode=false from a tarball generated with
  Autotools will fail with a proper error message.
  Fixes #6

2020-03-31  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: Set default value of the 'warnings' option to 'min'

  And add 'dist-warnings' with default value 'fatal'. It's used when a
  tarball is tested by 'ninja dist' or 'meson dist'.
  https://mail.gnome.org/archives/gtkmm-list/2020-March/msg00025.html
  
  Add a better error message if mm-common-get is required but not found.

2020-03-31  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pango/src/*.hg: Mark _WRAP_ENUM with decl_prefix

  This way, we can use compiler directives to export the symbols for the
  _WRAP_ENUM-generated template<> classes.

2020-03-30  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Fix build instruction info display

  Make up the missing escape carats...

2020-03-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: Avoid some recompilations, and other changes

  * MSVC_NMake/filelist.am: Remove pangomm/copy-pangommconfig-h.py.
  * MSVC_NMake/pangomm/copy-pangommconfig-h.py: Removed file.
  * MSVC_NMake/pangomm/meson.build: Copy pangommconfig.h with configure_file().
  * Makefile.am: Distribute tools/dummy-header.py instead of tools/dist-cmd.py.
  * docs/reference/meson.build: Rename a variable.
  * meson.build: Rename some variables. Always set gmmproc_dir.
  In maintainer-mode, show its value in the summary.
  * pango/meson.build: Set pangommconfig_h.
  * pango/pangomm/meson.build: Create dummy_header.h, depending on all
  generated headers. It guarantees that all generated headers are built
  before pangomm_library is built, at the same time avoiding unnecessary
  recompilations.
  * tools/dist-cmd.py: Removed file. It's not necessary in add_dist_script()
  when the first parameter is python3.path().
  * tools/dummy-header.py: New file.

2020-03-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  2.43.2

2020-03-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  README: Describe building with Meson and Autotools

2020-03-17  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Use glibmm-2.66 instead of glibmm-2.64

  We have changed the ABI name in glibmm.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Support Meson-built glibmm

  Add the correct naming for the DLLs and .lib's for glibmm that is built
  with Meson.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Ignore warnings C4251 and C4275

  We might well be building against glibmm that is not built using gendef,
  so we get C4251 and C4275 warnings when building against such GLib
  builds.  Ignore those warnings, since we know quite well that we are
  importing from glibmm's import libraries using __declspec(dllimport) in
  this case.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Drop gendef from the sources

  Since we are now using compiler directives to export the symbols on
  Visual Studio builds, we can now drop the venerable gendef tool from the
  sources.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Visual Studio builds: Do not use gendef.exe

  Instead, use compiler directives to build the pangomm DLLs.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pango/pangomm/*.h: Decorate APIs with PANGOMM_API

  This prepares for the export of symbols using compiler directives rather
  than using gendef.exe.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pango/src/*.hg: Decorate classes and functions with PANGOMM_API

  This prepares for using compiler directives to export symbols rather
  than using gendef.exe.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pango/pangomm/meson.build: Define PANGOMM_BUILD

  This will eventually let us tell the compiler that we want to use
  compiler directives to export the symbols.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pango/pangommconfig.h.*: Add PANGOMM_API

  This prepares for decoration of the various APIs in pangomm so that we
  can export symbols at least on Visual Studio buids using compiler
  directives, without the need of gendef.exe.

2020-03-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Fix build from Meson tarballs

  Look also for headers in untraced/pango and untracked/pango/pangomm, and
  fix up headers installation and build rules.

2020-03-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson: Ignore warning C4251 and C4275 on MSVC builds

  We might be building against glibmm that is built with
  __declspec(dllexport), meaning that warnings C4251 and C4275 will be
  generated as we are now in-turn using __declspec(dllimport).  We can
  just ignore these compiler warnings, since we are pretty sure what we
  are doing at this point.

2020-03-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson: Build generate_extra_defs with Visual Studio too

  The NMake Makefiles in glibmm now builds glibmm_generate_extra_defs-2.x.lib,
  so we can make use of it to build generate_extra_defs on Visual Studio too.

2020-03-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson.build: Look for glibmm with pkg-config on MSVC too

  glibmm gained Meson build support for Visual Studio, so we can first
  try to look for glibmm with pkg-config first, and then fall back to
  manual searching if that cannot be found.
  
  Note that libsigc++ also has a Meson build system as well, but either we
  look for it via glibmm's pkg-config files, or we look for both glibmm
  and libsigc++ manually.
  
  Also support looking for Meson-built libsigc++ .lib's as well if glibmm
  is to be looked for manually.

2020-03-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Meson: allow maintainer builds on Visual Studio too

  glibmm recently gained the ability to build with Visual Studio from a GIT
  checkout and to install the PERL scripts used to generate the C++ sources from
  the respective templates, so enable this support for pangomm as well as the
  needed infrastructure are largely in place.
  
  Note that a new configuration option has been added for Visual Studio builds
  to specify the directory for gmmproc, although there is Meson build support
  for building glibmm, but NMake Makefiles could have been used to build
  glibmm, meaning glibmm built with Visual Studio may not have pkg-config
  files, so it is used to specify the location if gmmproc if necessary.
  
  Since some portions that we use for non-maintainer builds can be used for
  maintainer builds as well, make them shared to keep changes minimal.

2020-03-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

  pango/src/color.hg: Fix call to _CLASS_BOXEDTYPE_STATIC

  Remove all the parameters after the second one, they were originally ignored
  as _CLASS_BOXEDTYPE_STATIC accepted 2 arguments and will cause issues with
  the new api_decoration stuff that was recently added to glibmm, which was the
  third argument

2020-02-27  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Support Meson-built libsigc++

  Add an option USE_MESON_LIBS for the NMake command line so that we can use
  the Meson-built libsigc++ easier, without needing to manually update Makefiles

2020-02-27  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Separate outdir and intdir by toolset version

  This reduces the chances of builds by different Visual Studio versions become
  mixed up with other versions, and makes the build tree cleaner.  Note that
  Visaul Studio 2015 through 2019 are treated as the same toolset version since
  they link to the same CRT.

2020-02-27  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Allow builds from a GIT checkout

  ...or a Meson-generated release tarball.
  
  Add targets to the NMake Makefiles which will allow:
  
  -Generating MSVC_NMake/pangomm/pangommconfig.h and
   MSVC_NMake/pangomm/pangomm.rc, needed for GIT checkouts and
   Meson-generated release tarballs
  
  -Generating the sources that need to be generated with gmmproc and
   generate_wrap_init.pl, needed for GIT checkouts, and fix installation
   accordingly.
  
  -Look for sources also in $(srcroot)/untracked, which will be the case
   for Meson-generated release tarballs.
  
  -"Install" the m4 files in tools/m4, so that other projects may use it.

2020-02-27  Chun-wei Fan  <fanchunwei@src.gnome.org>

  NMake Makefiles: Add rules to generate pre-configured items

  This will generate the pangomm.rc and pangommconfig.h files, which are needed
  for a Visual Studio build.  This will make builds from a GIT checkout
  easier with NMake.

2020-01-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Meson build: Improve internal dependencies

  * docs/reference/meson.build: Less difference between maintainer-mode and
  not maintainer-mode.
  * pango/pangomm/meson.build: Make separate lists of built .h files and
  built .cc files.

2020-01-02  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  docs/reference/meson.build: Check if perl is found

  Don't use perl.path() when configuring Doxyfile, if perl is not found.
  Perl is not required, if build-documentation=false.
  See https://github.com/libsigcplusplus/libsigcplusplus/issues/53

2019-12-27  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  meson.build: Check if .git is a directory or file

  In a git worktree, .git is a regular file.
  
  See MR !8 (Ting-Wei Lan)

2019-10-22  Chun-wei Fan  <fanchunwei@src.gnome.org>

  README.win32: Add instructions on Meson builds

  This is added for at least the Visual Studio builds.

2019-10-22  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson.build: Fix library search error messages

  The .format(...) items are placed wrongly in the cases that the required
  -mm libraries are not found.  Fix this.
  
  Make these messages clearer to people that all 3 C++-17 versions of the
  cairomm, glibmm and sigc++ .lib's are required by combining the 3
  assert messages into a single assert message.

2019-10-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson: Link in the version resource on Windows

  For all Windows builds, compile the version resource script (pangomm.rc)
  and link it into the pangomm DLL so that we embed the version info in
  that DLL.

2019-10-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson.build: Add MSVC-specific warning items

  Let MSVC report warnings that roughly match those reported by the GCC
  builds, but ignore the warnings that aren't really harmful, by referring
  to GLib's msvc_recommended_pragmas.h.

2019-10-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson: Build import .lib for MSVC builds

  This first builds gendef.cc in MSVC_NMake/gendef so that we can use it
  to generate the .def file that we need to build the import .lib file for
  the pangomm DLL.
  
  However, in order to do this in Meson, we need to build the sources into
  a temporary static .lib and run gendef.exe against it (which works with
  gendef.cc unchanged, thanks to dumpbin /symbols accepting static .lib's
  as well, so we won't have to figure out where the compiled object files
  are) in order to obtain the symbols that we need, since Meson does not
  support pre-link build steps.
  
  Note that all the source files are still compiled only once since we are
  using extract_all_objects(), so the only overhead is the temporary static
  .lib that we need to build to obtain the .def file.

2019-10-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Meson: Don't use 'cp' in MSVC_NMake

  The 'cp' command is unfortunately not available in non-UNIXy shells, so
  use a Python script instead to do the same thing.

2019-10-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson: Don't build generate_extra_defs on MSVC

  This depends on portions in glibmm tat is not applicable directly to
  MSVC builds, so skip building this on MSVC

2019-10-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

  meson: Check for -mm deps manually on MSVC

  The MSVC build files for the -mm library dependencies do not generate
  pkg-config files, so check for them manually.  This can be eventually
  replaced by the pkg-config checks when these dependencies gain
  Meson build support for MSVC.
  
  This will build and link pangomm without the import libraries, which
  will require us to build and use gendef.exe that is in
  MSVC_NMake/gendef, which will be done in a later commit.

2019-10-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Meson builds: Improve GIT check on MSVC builds

  Check that we are not attempting to build directly from a GIT
  checkout on MSVC, as this is currently not supported as m4 is required,
  which is not well supported on a Windows cmd.exe environment.

2019-10-14  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  pango/pangomm/meson.build: Fix output from declare_dependency()

  * meson.build: Rename pangomm_deps -> pangomm_build_dep to avoid mix-up
  with pangomm_dep in pango/pangomm/meson.build.
  * pango/pangomm/meson.build: Add correct include directories in
  declare_dependency() when maintainer_mode is false. Simplify the code.
  * tools/extra_defs_gen/meson.build: Depend on pangomm_build_dep.

2019-09-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Add support for building pangomm with Meson

  pangomm can be built with either Autotools or Meson.
  
  See MR !4

2019-09-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Use glibmm-2.64 instead of glibmm-2.62

  We have changed the ABI name in glibmm.

2019-08-12  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Coverage: Minor documentation fix

2019-07-28  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  tools: Remove obsolete files

  * tools/Makefile.am: Don't distribute README.
  * tools/Makefile_list_of_sources.am_fragment: Remove, not used.
  * tools/README:
  * tools/TODO: Remove, once copied from glibmm, don't belong to pangomm.

2019-07-24  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  LayoutLine: Remove unnecessary forward declaration

  The forward declaration of Glib::wrap(PangoLayoutLine*, bool) became
  unnecessary when the LayoutLineTraits struct was moved to layout.ccg
  in commit 57d8bceba336e972a4967db6872a373eac1833b9.

2019-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Remove deprecated API

  * pango/src/attrlist.[ccg|hg]: Remove non-const operator bool().
  * pango/src/cairofontmap.[ccg|hg]: Remove create_context().
  * pango/src/color.[ccg|hg]: Remove non-const operator bool().
  * pango/src/layout.[ccg|hg]: Remove get_iter(LayoutIter& iter).
  * pango/src/layoutiter.[ccg|hg]: Remove assign_gobj().

2019-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Layout::get_lines(): Fix ownership of the GSList

  Change Glib::OWNERSHIP_SHALLOW -> NONE

2019-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Coverage: Remove max(), to_bytes() and one create()

  * pango/src/coverage.[ccg|hg]: pango_coverage_from_bytes(),
  pango_coverage_to_bytes() and pango_coverage_max() are deprecated in
  pango 1.43. Remove them in pangomm.
  * pango/src/fontmap.hg: Remove an _IGNORE() macro.

2019-07-22  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Regenerate pango_docs.xml and .defs files

  and update pango_extra_objects.defs.

2019-03-21  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Doxyfile.in: Remove obsolete glibmm configuration constants

  They have been removed from glibmm. See issue glibmm#22.

2019-03-19  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Use glibmm-2.62 instead of glibmm-2.60

  We have changed the ABI name in glibmm.

2018-12-30  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  tools/gen_scripts: Update for non-source-dir builds

  Most modules (e.g. pango) can be built in a directory separated from the
  source directory. Update the scripts that generate .defs and doc.xml files
  to handle that.
  The environment variable JHBUILD_SOURCES is not used any more.
  Instead the environment variables GMMPROC_GEN_SOURCE_DIR and
  GMMPROC_GEN_BUILD_DIR are read. See comments in init_generate.sh.

2018-11-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  2.43.1

2018-11-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Change the ABI to pangomm-2.44

  So we can use the 2.42 version numbers for stable releases in the
  pangomm-1.4 ABI series.
  We don't need to release a stable ABI-parallel pangomm until
  we need to release gtkmm 4.0, and that won't happen until GTK+ 4.0.0
  happens, and we don't know when that might be.
  
  We've done similar ABI name changes before.

2018-11-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  FontDescription: Add set/get_variations()

2018-11-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Regenerate .defs and docs.xml files

2018-11-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Add tools/gen_scripts/generate_all.sh

2018-11-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Use glibmm-2.60 instead of glibmm-2.58

  We have changed the ABI name in glibmm.

2018-10-26  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  configure.ac: Update bug report address

2018-09-10  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Update .gitignore

2018-09-10  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Fix reference documentation generation

  * pango/pangomm/Makefile.am:
  * pango/pangomm/filelist.gmake.am: Split out again the autotools-specific
  portion that we previously split out from pango/pangomm/filelist.am into a
  file of its own.
  * docs/Makefile.am: Include pango/pangomm/filelist.gmake.am to ensure the
  reference documentation is generated for all files.

2018-09-07  Chun-wei Fan  <fanchunwei@src.gnome.org>

  build: Remove Visual Studio 2017 projects

  Since they have been superseded with the NMake Makefiles, remove them
  from the source tree.

2018-09-07  Chun-wei Fan  <fanchunwei@src.gnome.org>

  build: Add NMake Makefiles to build pangomm

  This adds a set of NMake Makefiles to be used to build pangomm with
  Visual Studio 2017 and later, which will share the
  pango/[src|pangomm]/filelist.am with the autotools build system.  By
  doing so, this will reduce the likelihood of the Visual Studio build
  files getting out-of-date when source files are added or removed.
  
  This also updates the build instructions in README.win32 (which is also
  changed to DOS/Windows line endings), and will dist the NMake Makefiles
  instead of the Visual Studio project files, which have been superseded
  and will be removed in the next commit.

2018-09-07  Chun-wei Fan  <fanchunwei@src.gnome.org>

  build: Split out GNU-specific stuff from filelist.am

  This is to prepare for it to be shared with non-GNU Make build systems.

2018-09-07  Chun-wei Fan  <fanchunwei@src.gnome.org>

  build: Rename MSVC_Net2017 to MSVC_NMake

  This prepares for the transition of the Visual Studio build files from
  the Visual Studio projects to NMake Makefiles, to ease future
  maintenance.

2018-09-03  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Attribute: Add several create_attr_*() methods

  * pango/src/attributes.[ccg|hg]: Add create_attr_size_absolute(),
  create_attr_underline_color(), create_attr_strikethrough_color(),
  create_attr_fallback(), create_attr_letter_spacing(),
  create_attr_gravity(), create_attr_gravity_hint(),
  create_attr_font_features(). Fixes #2

2018-09-03  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Fix compilation of each header file

  Add #includes, necessary to make all header files pass the test with
  glibmm/tools/test_scripts/testheaders.sh.

2018-04-08  Murray Cumming  <murrayc@murrayc.com>

  Require C++17

  Because libsigc++-3.0 (and therefore glibmm) now requires C++17.

2018-03-26  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Use glibmm-2.58 instead of glibmm-2.56

  We have changed the ABI name in glibmm.

2018-02-22  Murray Cumming  <murrayc@murrayc.com>

  2.41.5

2017-09-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Update .gitignore

2017-09-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  GlyphString: Remove some functions from _IGNORE()

  and remove an obsolete TODO comment. There is no
  pango_cairo_glyph_string_path() in pango.

2017-09-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Regenerate pango_docs.xml and the .defs files

  and add PangoCoverage to pango_extra_objects.defs.

2017-09-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  tools/gen_scripts/: Update for pango built with meson

  When pango is built with meson instead of autotools, generated .h and .c
  files are stored in pango/build/pango. Files in that directory shall be read
  when pango_docs.xml and the .defs files are generated.
  
  Don't read private and internal .h files.

2017-08-25  Murray Cumming  <murrayc@murrayc.com>

  2.41.4

2017-08-25  Murray Cumming  <murrayc@murrayc.com>

  Use glibmm-2.56 instead of glibmm-2.54.

  We have changed the ABI name in glibmm.

2017-07-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Fontset: Remove GLIBMM_EXCEPTIONS_ENABLED

2017-06-26  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  AttrString: Let _MEMBER_GET convert from const char*

  It's better to invoke a _CONVERSION that converts from a constant character
  array. _MEMBER_GET shall not modify or delete the array. The used _CONVERSION
  from non-const char* will be removed from convert_glib.m4. Bug 783360

2017-06-11  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Make enum Weight implicitly convertible to int

  Add CONV_TO_INT to _WRAP_ENUM. Bug 86864

2017-04-26  Murray Cumming  <murrayc@murrayc.com>

  2.41.3

2017-04-19  Murray Cumming  <murrayc@murrayc.com>

  Renderer: Change RendererPart to Renderer::Part.

2017-04-19  Murray Cumming  <murrayc@murrayc.com>

  Coverage: Change CoverageLevel to Coverage::Level.

2017-04-11  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

  Fix build when _WRAP_ENUM generates enum class

  Bug 86864

2017-04-07  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Visual Studio builds: Update glibmm ABI version

  The glibmm ABI version has been updated in its unstable development series
  as we await for GTK+-4.0, so update it accordingly here.

2017-03-30  Murray Cumming  <murrayc@murrayc.com>

  2.41.2

2017-03-22  Murray Cumming  <murrayc@murrayc.com>

  Use glibmm-2.54 instead of glibmm-2.52

  We changed the ABI name of the currently-unstable glibmm series.

2017-03-17  Murray Cumming  <murrayc@murrayc.com>

  Use std::vector instead of Glib::ArrayHandle<>.

  Using Glib::ArrayHandler<>::array_to_vector() and
  Glib::ArrayHandler<>::vector_to_array() instead, and only in the
  implementation instead of in the API.

2017-03-17  Murray Cumming  <murrayc@murrayc.com>

  Layout::get_lines(): Use std::vector instead of Glib::SListHandle<>.

  Using Glib::SListHandler<>::slist_to_vector() and
  Glib::SListHandler<>::vector_to_slist() instead, and only in the
  implementation instead of in the API.

2017-03-17  Murray Cumming  <murrayc@murrayc.com>

  Item, AttrIter: Use std::vector intead of SListHandle<>.

  Using Glib::SListHandler<>::slist_to_vector() and
  Glib::SListHandler<>::vector_to_slist() instead, and only in the
  implementation instead of in the API.

2017-03-17  Murray Cumming  <murrayc@murrayc.com>

  Context::itemize(): Use std::vector instead of ListHandle<>.

  Using Glib::ListHandler<>::list_to_vector() and
  Glib::ListHandler<>::vector_to_list() instead, and only in the
  implementation instead of in the API.

2017-03-15  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Visual Studio builds: Require Visual Studio 2017

  pangomm now requires C++-14 features that are only adequately supported
  with Visual Studio 2017 (and later), so update the projects and related
  items accordingly.  This also updates the DLL version naming to be in
  line with what is in the autotools builds.
  
  Let people know that this is the case in README.win32.

2017-01-04  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Visual Studio builds: "Install" .pdb files

  Since we already generate the .pdb files during the build, make better use
  of them so that we could debug easier.  Also clean up the property sheet
  by removing extra blank lines.

2016-12-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

  C++11, AttrList: Don't use nullptr with an integer

2016-12-09  Murray Cumming  <murrayc@murrayc.com>

  C++11: Use of auto.

2016-12-09  Murray Cumming  <murrayc@murrayc.com>

  C++11: Use of nullptr.

2016-11-23  Murray Cumming  <murrayc@murrayc.com>

  2.41.1

2016-11-15  Murray Cumming  <murrayc@murrayc.com>

  Link to the glibmm-2.52 version of glibmm_generate_extra_defs.

2016-11-15  Murray Cumming  <murrayc@murrayc.com>

  Correct needed cairomm ABI name to cairomm-1.16

2016-11-14  Murray Cumming  <murrayc@murrayc.com>

  Build: Require C++14 instead of C++11.

  Because we now use a glibmm that requires C++14.

2016-11-11  Murray Cumming  <murrayc@murrayc.com>

  Use cairomm-1.14 instead of cairomm-1.0.

2016-11-11  Murray Cumming  <murrayc@murrayc.com>

  Use the glibmm-2.52 ABI instead of glibmm-2.4

2016-11-11  Murray Cumming  <murrayc@murrayc.com>

  Change ABI from pangomm-1.4 to pangomm-2.42

  This installs in parallel with pangomm-1.4.

2016-08-19  Murray Cumming  <murrayc@murrayc.com>

  2.40.1

2016-07-19  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

  Build: Fix silent builds

  * configure.ac: Pass yes to AM_SILENT_RULES, thus enabling silent builds.
  Replace MM_AX_CXX_COMPILE_STDCXX_11 by MM_AX_CXX_COMPILE_STDCXX (not necessary
  for silent builds).
  * docs/reference/Doxyfile.in: Set QUIET=YES.
  Update for doxygen 1.8.11 (not necessary for silent builds).
  Bug #768797

2016-04-10  Murray Cumming  <murrayc@murrayc.com>

  C++11: AttrIter, AttrList, Color: Make operator bool() explicit.

  See https://bugzilla.gnome.org/show_bug.cgi?id=626858#c4

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

  2.40

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

  Regenerate docs.xml files.

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

  Regenerate .defs.

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

  Depend on latest glibmm-2.4

  To use the latest gmmproc.

2015-11-29  Murray Cumming  <murrayc@murrayc.com>

  2.39.1

2015-11-29  Murray Cumming  <murrayc@murrayc.com>

  Depend on a recent glibmm

  To use the latest gmmproc.

2015-11-29  Murray Cumming  <murrayc@murrayc.com>

  Renderer: Add get/set_alpha().

  Wrapping pango_renderer_get/set_alpha(), which is new API
  in pango 1.38.

2015-11-29  Murray Cumming  <murrayc@murrayc.com>

  Attributes: Add create_attr_foreground/background_alpha().

  Wrapping new API in pango.

2015-11-29  Murray Cumming  <murrayc@murrayc.com>

  Regenerate docs.xml file.

2015-11-29  Murray Cumming  <murrayc@murrayc.com>

  Regenerate .defs files.

2015-10-27  Murray Cumming  <murrayc@murrayc.com>

  --enable-warnings=fatal: Use the same warnings as glibmm and gtkmm.

2015-09-23  Murray Cumming  <murrayc@murrayc.com>

  Reduce the cairomm dependency back to 1.2.2.

  Because it probably works, and this is kinder.
  Bug #755460 (Daniel Stone)

2015-09-22  Murray Cumming  <murrayc@murrayc.com>

  2.38.1

2015-09-21  Murray Cumming  <murrayc@murrayc.com>

  2.38.0

2015-09-17  Chun-wei Fan  <fanchunwei@src.gnome.org>

  Update .gitignore for MSVC-specific Items

2015-09-10  Chun-wei Fan  <fanchunwei@src.gnome.org>

  MSVC Builds: Improve Build Speed and Debugging Experience

  Use multiprocessor compilation, which can cut down build times by quite a
  bit, and use /d2Zi+ to put more useful info into the .pdb's in release
  builds.

2015-09-10  Chun-wei Fan  <fanchunwei@src.gnome.org>

  MSVC Builds: Support only Visual Studio 2013 (and later)

  The current pangomm code base now requires C++-11 support, which is only
  supported well enough by Visual Studio 2013 and later, so:
  
  -Update the Visaul Studio 2010 projects to be in 2013 format, and rename
   things as needed.
  -Remove the Visual Studio 2005/2008 projects
  -Update the README.win32 file to reflect on these changes.

2015-09-03  Murray Cumming  <murrayc@murrayc.com>

  2.37.2

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

  configure.ac: Require the latest glibmm.

  To use the latest gmmproc, which generates more move operations,
  and to have the latest Glib::Object/ObjectBase/Interface which have
  move operations that those generated move operations call.

